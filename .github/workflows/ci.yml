name: SmartWork CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      oracle:
        image: gvenzl/oracle-xe:21-slim
        env:
          ORACLE_PASSWORD: oracle
          APP_USER: smartwork
          APP_USER_PASSWORD: smartwork123
        ports:
          - 1521:1521
        options: >-
          --health-cmd healthcheck.sh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn clean install -DskipTests

    - name: Run unit tests
      run: mvn test

    - name: Run integration tests
      run: mvn verify -DskipUnitTests
      env:
        DB_PASSWORD: smartwork123
        JWT_SECRET: ${{ secrets.JWT_SECRET }}

    - name: Generate test coverage report
      run: mvn jacoco:report

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./smartwork-api/target/site/jacoco/jacoco.xml
        flags: unittests
        name: codecov-smartwork

    - name: Build Docker image
      if: github.event_name == 'push'
      run: |
        docker build -t smartwork-api:${{ github.sha }} smartwork-api/
        docker tag smartwork-api:${{ github.sha }} smartwork-api:latest

    - name: Run security scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'smartwork-api:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload security scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Run SonarCloud analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn sonar:sonar -Dsonar.projectKey=smartwork -Dsonar.organization=your-org

  dependency-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run dependency check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'SmartWork'
        path: '.'
        format: 'HTML'

    - name: Upload dependency check results
      uses: actions/upload-artifact@v3
      with:
        name: dependency-check-report
        path: reports/
