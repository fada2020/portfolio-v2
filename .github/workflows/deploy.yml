name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # 수동 실행 가능

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. 코드 체크아웃
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. Java 21 설정
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    # 3. Gradle 빌드 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # 4. Gradle 빌드 (테스트 스킵)
    - name: Build with Gradle
      run: ./gradlew clean build -x test

    # 5. Docker 로그인 (Docker Hub 사용 시)
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 6. Docker 이미지 빌드 및 푸시
    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/smartwork:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/smartwork:latest

    # 7. EC2 배포
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          # 기존 컨테이너 중지 및 제거
          docker stop smartwork-app || true
          docker rm smartwork-app || true

          # 이전 이미지 제거
          docker rmi ${{ secrets.DOCKER_USERNAME }}/smartwork:latest || true

          # 최신 이미지 Pull
          docker pull ${{ secrets.DOCKER_USERNAME }}/smartwork:latest

          # 새 컨테이너 실행
          docker run -d \
            --name smartwork-app \
            --restart unless-stopped \
            -p 8080:8080 \
            -e SPRING_PROFILES_ACTIVE=prod \
            -e DB_URL=${{ secrets.DB_URL }} \
            -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e TZ=Asia/Seoul \
            --memory="768m" \
            --memory-reservation="512m" \
            ${{ secrets.DOCKER_USERNAME }}/smartwork:latest

          # 이전 이미지 정리 (dangling images)
          docker image prune -f

          # 컨테이너 상태 확인
          docker ps -a | grep smartwork-app

          # 로그 확인 (처음 20줄)
          sleep 10
          docker logs --tail 20 smartwork-app

    # 8. 슬랙/디스코드 알림 (선택사항)
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"
        fi
